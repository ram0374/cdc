version: '3.7'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.3
    container_name: zookeeper_sqlserver
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-enterprise-kafka:5.5.3
    container_name: kafka_sqlserver
    depends_on:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9991
    ports:
      - 9092:9092      # for containers
      - 29092:29092    # for host

  sqlserver:
    image: sqlserver-2022-agent:1.0
    container_name: sqlserver_db
    environment:
      ACCEPT_EULA: Y
      SA_PASSWORD: "Test@2013"
      MSSQL_PID: "Developer"
    ports:
      - 1433:1433
    volumes:
      - sqlserver-data:/var/opt/mssql
    command: /opt/mssql/bin/sqlservr

  connect:
    image: quay.io/debezium/connect:3.0
    container_name: debezium_sqlserver
    depends_on:
      - kafka
      - sqlserver
    ports:
      - 8083:8083
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: my_connect_configs
      OFFSET_STORAGE_TOPIC: my_connect_offsets
      STATUS_STORAGE_TOPIC: my_connect_statuses
    links:
      - kafka
      - zookeeper
      - sqlserver

volumes:
  sqlserver-data:
